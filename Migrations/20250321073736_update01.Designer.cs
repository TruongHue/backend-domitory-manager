// <auto-generated />
using System;
using API_dormitory.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_dormitory.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250321073736_update01")]
    partial class update01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("API_dormitory.Models.Bills.PriceWaterAndElectricity", b =>
                {
                    b.Property<int>("idPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("idPrice"));

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("electricityPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("waterLimit")
                        .HasColumnType("int");

                    b.Property<decimal>("waterPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("waterPriceOverLimit")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("idPrice");

                    b.ToTable("PriceWaterAndElectricities");
                });

            modelBuilder.Entity("API_dormitory.Models.Bills.RoomBillModels", b =>
                {
                    b.Property<int>("IdRoomBill")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idRoomBill");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdRoomBill"));

                    b.Property<decimal>("DailyPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("dailyPrice");

                    b.Property<DateTime>("DateOfRecord")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dateOfRecord");

                    b.Property<int>("IdRoom")
                        .HasColumnType("int")
                        .HasColumnName("idRoom");

                    b.Property<decimal>("PriceYear")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("priceYear");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("IdRoomBill");

                    b.HasIndex("IdRoom");

                    b.ToTable("RoomBill");
                });

            modelBuilder.Entity("API_dormitory.Models.Bills.WaterBillModels", b =>
                {
                    b.Property<int>("IdWater")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idWater");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdWater"));

                    b.Property<int>("AfterIndex")
                        .HasColumnType("int")
                        .HasColumnName("afterIndex");

                    b.Property<int>("BeforeIndex")
                        .HasColumnType("int")
                        .HasColumnName("beforeIndex");

                    b.Property<DateTime>("DateOfRecord")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dateOfRecord");

                    b.Property<int>("IdRoom")
                        .HasColumnType("int")
                        .HasColumnName("idRoom");

                    b.Property<decimal>("IndexLimit")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("indexLimit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("price");

                    b.Property<decimal>("PriceLimit")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("priceLimit");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("total");

                    b.HasKey("IdWater");

                    b.HasIndex("IdRoom");

                    b.ToTable("WaterBill");
                });

            modelBuilder.Entity("API_dormitory.Models.Registrations.RegistrationPeriodModels", b =>
                {
                    b.Property<int>("IdRegistrationPeriod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idRegistrationPeriod");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdRegistrationPeriod"));

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("actionDate");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("endDate");

                    b.Property<int>("SemesterStatus")
                        .HasColumnType("int")
                        .HasColumnName("semesterStatus");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("startDate");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("IdRegistrationPeriod");

                    b.ToTable("RegistrationPeriods");
                });

            modelBuilder.Entity("API_dormitory.Models.Rooms.BuildingModels", b =>
                {
                    b.Property<int>("IdBuilding")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idBuilding");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdBuilding"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<string>("NameBuilding")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nameBuilding");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("IdBuilding");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("API_dormitory.Models.Rooms.ElectricityBillModels", b =>
                {
                    b.Property<int>("IdElectricity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idElectricity");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdElectricity"));

                    b.Property<int>("AfterIndex")
                        .HasColumnType("int")
                        .HasColumnName("afterIndex");

                    b.Property<int>("BeforeIndex")
                        .HasColumnType("int")
                        .HasColumnName("beforeIndex");

                    b.Property<DateTime>("DateOfRecord")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dateOfRecord");

                    b.Property<int>("IdRoom")
                        .HasColumnType("int")
                        .HasColumnName("idRoom");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("price");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("total");

                    b.HasKey("IdElectricity");

                    b.HasIndex("IdRoom");

                    b.ToTable("ElectricityBill");
                });

            modelBuilder.Entity("API_dormitory.Models.Rooms.InfoRoomModels", b =>
                {
                    b.Property<int>("IdRoom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idRoom");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdRoom"));

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasColumnName("gender");

                    b.Property<int>("IdBuilding")
                        .HasColumnType("int")
                        .HasColumnName("idBuilding");

                    b.Property<int>("NumberOfBed")
                        .HasColumnType("int")
                        .HasColumnName("numberOfBed");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nameRoom");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("IdRoom");

                    b.HasIndex("IdBuilding");

                    b.ToTable("InfoRoom");
                });

            modelBuilder.Entity("API_dormitory.Models.Users.AccountDTO", b =>
                {
                    b.Property<int>("IdAccount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idAccount");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdAccount"));

                    b.Property<string>("NumberPhone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("numberPhone");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(65)
                        .HasColumnType("varchar(65)")
                        .HasColumnName("password");

                    b.Property<int>("Roles")
                        .HasColumnType("int")
                        .HasColumnName("roles");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("UserCode")
                        .HasMaxLength(65)
                        .HasColumnType("varchar(65)")
                        .HasColumnName("userCode");

                    b.Property<string>("UserName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("userName");

                    b.HasKey("IdAccount");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("API_dormitory.Models.Users.InfoStudentModels", b =>
                {
                    b.Property<int>("IdStudent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idStudent");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdStudent"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("idAccount");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasColumnName("gender");

                    b.Property<string>("NameParent")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nameParent");

                    b.Property<string>("ParentNumberPhone")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("parentNumberPhone");

                    b.Property<string>("Picture")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("picture");

                    b.HasKey("IdStudent");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("InfoStudents");
                });

            modelBuilder.Entity("API_dormitory.Models.feedback.FeedbackModels", b =>
                {
                    b.Property<int>("IdFeeedback")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdFeeedback"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("IdStudent")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("IdFeeedback");

                    b.HasIndex("IdStudent");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("API_dormitory.Models.registerRoom.RegisterRoomModels", b =>
                {
                    b.Property<int>("IdRegister")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdRegister"));

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("actionDate");

                    b.Property<DateTime>("endDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("idRegistrationPeriod")
                        .HasColumnType("int");

                    b.Property<int>("idRoom")
                        .HasColumnType("int");

                    b.Property<int>("idStudent")
                        .HasColumnType("int");

                    b.Property<int>("paymentStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("startDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("price");

                    b.HasKey("IdRegister");

                    b.HasIndex("idRoom");

                    b.HasIndex("idStudent");

                    b.ToTable("RegisterRoom");
                });

            modelBuilder.Entity("API_dormitory.Models.Bills.RoomBillModels", b =>
                {
                    b.HasOne("API_dormitory.Models.Rooms.InfoRoomModels", "InfoRoom")
                        .WithMany("RoomBills")
                        .HasForeignKey("IdRoom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InfoRoom");
                });

            modelBuilder.Entity("API_dormitory.Models.Bills.WaterBillModels", b =>
                {
                    b.HasOne("API_dormitory.Models.Rooms.InfoRoomModels", "InfoRoom")
                        .WithMany("WaterBills")
                        .HasForeignKey("IdRoom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InfoRoom");
                });

            modelBuilder.Entity("API_dormitory.Models.Rooms.ElectricityBillModels", b =>
                {
                    b.HasOne("API_dormitory.Models.Rooms.InfoRoomModels", "InfoRoom")
                        .WithMany("ElectricityBills")
                        .HasForeignKey("IdRoom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InfoRoom");
                });

            modelBuilder.Entity("API_dormitory.Models.Rooms.InfoRoomModels", b =>
                {
                    b.HasOne("API_dormitory.Models.Rooms.BuildingModels", "Building")
                        .WithMany("Rooms")
                        .HasForeignKey("IdBuilding")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("API_dormitory.Models.Users.InfoStudentModels", b =>
                {
                    b.HasOne("API_dormitory.Models.Users.AccountDTO", "Account")
                        .WithOne("InfoStudent")
                        .HasForeignKey("API_dormitory.Models.Users.InfoStudentModels", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("API_dormitory.Models.feedback.FeedbackModels", b =>
                {
                    b.HasOne("API_dormitory.Models.Users.InfoStudentModels", "InfoStudent")
                        .WithMany("Feedbacks")
                        .HasForeignKey("IdStudent")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("InfoStudent");
                });

            modelBuilder.Entity("API_dormitory.Models.registerRoom.RegisterRoomModels", b =>
                {
                    b.HasOne("API_dormitory.Models.Rooms.InfoRoomModels", "InfoRoom")
                        .WithMany("RegisterRooms")
                        .HasForeignKey("idRoom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_dormitory.Models.Users.InfoStudentModels", "InfoStudent")
                        .WithMany("RegisterRooms")
                        .HasForeignKey("idStudent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InfoRoom");

                    b.Navigation("InfoStudent");
                });

            modelBuilder.Entity("API_dormitory.Models.Rooms.BuildingModels", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("API_dormitory.Models.Rooms.InfoRoomModels", b =>
                {
                    b.Navigation("ElectricityBills");

                    b.Navigation("RegisterRooms");

                    b.Navigation("RoomBills");

                    b.Navigation("WaterBills");
                });

            modelBuilder.Entity("API_dormitory.Models.Users.AccountDTO", b =>
                {
                    b.Navigation("InfoStudent");
                });

            modelBuilder.Entity("API_dormitory.Models.Users.InfoStudentModels", b =>
                {
                    b.Navigation("Feedbacks");

                    b.Navigation("RegisterRooms");
                });
#pragma warning restore 612, 618
        }
    }
}
